{"version":3,"file":"zustand_middleware.js","names":[],"sources":["../../zustand/esm/middleware.mjs"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = ((state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  });\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = ((selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  });\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    return setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      return setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n"],"mappings":"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"}